{"ast":null,"code":"var _jsxFileName = \"/usr/local/ampps/www/react-quiz/src/components/pages/Quiz.js\",\n    _s = $RefreshSig$();\n\nimport _ from 'lodash';\nimport { useEffect, useReducer, useState } from 'react';\nimport { Navigate, useParams } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport useQuestions from '../../hooks/useQuestions';\nimport Answers from '../Answers';\nimport Miniplayer from '../Miniplayer';\nimport Progressbar from '../Progressbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = null;\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'questions':\n      action.value.forEach(question => {\n        question.options.forEach(option => {\n          option.checked = false;\n        });\n      });\n      return action.value;\n\n    case 'answer':\n      const questions = _.cloneDeep(state);\n\n      questions[action.questionID].options[action.optionIndex].checked = action.value;\n      return questions;\n\n    default:\n      return state;\n  }\n};\n\nexport default function Quiz() {\n  _s();\n\n  const {\n    currentUser\n  } = useAuth();\n  const {\n    id\n  } = useParams();\n  const {\n    loader,\n    error,\n    questions\n  } = useQuestions(id);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [qna, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    dispatch({\n      type: 'questions',\n      value: questions\n    });\n  }, [questions]);\n  return !currentUser ? /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pick three of your favorite Star Wars Flims\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Question can have multiple answers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Answers, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Progressbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Miniplayer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Quiz, \"lSO1bUdi3YPnLpo9GiLK5gWg2Mg=\", false, function () {\n  return [useAuth, useParams, useQuestions];\n});\n\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["_","useEffect","useReducer","useState","Navigate","useParams","useAuth","useQuestions","Answers","Miniplayer","Progressbar","initialState","reducer","state","action","type","value","forEach","question","options","option","checked","questions","cloneDeep","questionID","optionIndex","Quiz","currentUser","id","loader","error","currentQuestion","setCurrentQuestion","qna","dispatch"],"sources":["/usr/local/ampps/www/react-quiz/src/components/pages/Quiz.js"],"sourcesContent":["import _ from 'lodash';\nimport { useEffect, useReducer, useState } from 'react';\nimport { Navigate, useParams } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport useQuestions from '../../hooks/useQuestions';\nimport Answers from '../Answers';\nimport Miniplayer from '../Miniplayer';\nimport Progressbar from '../Progressbar';\n\nconst initialState = null;\n\nconst reducer = (state, action) => {\n  switch(action.type){\n    case 'questions':\n      action.value.forEach(question => {\n        question.options.forEach(option => {\n          option.checked = false;\n        });\n      });\n\n      return action.value;\n    case 'answer':\n      const questions = _.cloneDeep(state);\n\n      questions[action.questionID].options[action.optionIndex].checked = action.value;\n\n      return questions;\n    default:\n      return state;\n  }\n}\n\nexport default function Quiz(){\n  const {currentUser} = useAuth();\n  const {id} = useParams();\n  const {loader, error, questions} = useQuestions(id);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n\n  const [qna, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    dispatch({\n      type: 'questions',\n      value: questions,\n    });\n  }, [questions]);\n\n  return !currentUser ? (\n    <Navigate to='/login' />\n  ) : (\n    <>\n      <h1>Pick three of your favorite Star Wars Flims</h1>\n      <h4>Question can have multiple answers</h4>\n\n      <Answers />\n      <Progressbar />\n      <Miniplayer />\n    </>\n  );\n}"],"mappings":";;;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,kBAApC;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;;AAEA,MAAMC,YAAY,GAAG,IAArB;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACjC,QAAOA,MAAM,CAACC,IAAd;IACE,KAAK,WAAL;MACED,MAAM,CAACE,KAAP,CAAaC,OAAb,CAAqBC,QAAQ,IAAI;QAC/BA,QAAQ,CAACC,OAAT,CAAiBF,OAAjB,CAAyBG,MAAM,IAAI;UACjCA,MAAM,CAACC,OAAP,GAAiB,KAAjB;QACD,CAFD;MAGD,CAJD;MAMA,OAAOP,MAAM,CAACE,KAAd;;IACF,KAAK,QAAL;MACE,MAAMM,SAAS,GAAGtB,CAAC,CAACuB,SAAF,CAAYV,KAAZ,CAAlB;;MAEAS,SAAS,CAACR,MAAM,CAACU,UAAR,CAAT,CAA6BL,OAA7B,CAAqCL,MAAM,CAACW,WAA5C,EAAyDJ,OAAzD,GAAmEP,MAAM,CAACE,KAA1E;MAEA,OAAOM,SAAP;;IACF;MACE,OAAOT,KAAP;EAhBJ;AAkBD,CAnBD;;AAqBA,eAAe,SAASa,IAAT,GAAe;EAAA;;EAC5B,MAAM;IAACC;EAAD,IAAgBrB,OAAO,EAA7B;EACA,MAAM;IAACsB;EAAD,IAAOvB,SAAS,EAAtB;EACA,MAAM;IAACwB,MAAD;IAASC,KAAT;IAAgBR;EAAhB,IAA6Bf,YAAY,CAACqB,EAAD,CAA/C;EACA,MAAM,CAACG,eAAD,EAAkBC,kBAAlB,IAAwC7B,QAAQ,CAAC,CAAD,CAAtD;EAEA,MAAM,CAAC8B,GAAD,EAAMC,QAAN,IAAkBhC,UAAU,CAACU,OAAD,EAAUD,YAAV,CAAlC;EAEAV,SAAS,CAAC,MAAM;IACdiC,QAAQ,CAAC;MACPnB,IAAI,EAAE,WADC;MAEPC,KAAK,EAAEM;IAFA,CAAD,CAAR;EAID,CALQ,EAKN,CAACA,SAAD,CALM,CAAT;EAOA,OAAO,CAACK,WAAD,gBACL,QAAC,QAAD;IAAU,EAAE,EAAC;EAAb;IAAA;IAAA;IAAA;EAAA,QADK,gBAGL;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAIE,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE,QAAC,WAAD;MAAA;MAAA;MAAA;IAAA,QALF,eAME,QAAC,UAAD;MAAA;MAAA;MAAA;IAAA,QANF;EAAA,gBAHF;AAYD;;GA3BuBD,I;UACApB,O,EACTD,S,EACsBE,Y;;;KAHbmB,I"},"metadata":{},"sourceType":"module"}