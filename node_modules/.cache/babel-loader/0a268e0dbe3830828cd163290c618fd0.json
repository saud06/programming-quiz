{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { get, getDatabase, orderByKey, query, ref } from 'firebase/database';\nimport { useEffect, useState } from \"react\";\nexport default function useAnswers(videoID) {\n  _s();\n\n  const [loader, setLoader] = useState(true);\n  const [error, setError] = useState(false);\n  const [answers, setAnswers] = useState([]);\n  useEffect(() => {\n    async function fetchAnswers() {\n      const db = getDatabase();\n      const answerRef = ref(db, 'answers/' + videoID + 'questions');\n      const answerQuery = query(answerRef, orderByKey());\n\n      try {\n        setError(false);\n        setLoader(true); // request firebase database\n\n        const snapshot = await get(answerQuery);\n        setLoader(false); // check if snapshot has data. return true / false\n\n        if (snapshot.exists()) {\n          // get previous state data first\n          setAnswers(prevAnswers => {\n            // return an array of previous destructured value, plus values from snapshot object\n            return [...prevAnswers, Object.values(snapshot.val())];\n          });\n        }\n      } catch (err) {\n        console.log(err);\n        setLoader(false);\n        setError(true);\n      }\n    }\n\n    fetchAnswers();\n  }, [videoID]);\n  return {\n    loader,\n    error,\n    answers\n  };\n}\n\n_s(useAnswers, \"JvktEBVMIDs5UkPj06QuVpr7/08=\");","map":{"version":3,"names":["get","getDatabase","orderByKey","query","ref","useEffect","useState","useAnswers","videoID","loader","setLoader","error","setError","answers","setAnswers","fetchAnswers","db","answerRef","answerQuery","snapshot","exists","prevAnswers","Object","values","val","err","console","log"],"sources":["/usr/local/ampps/www/react-quiz/src/hooks/useAnswers.js"],"sourcesContent":["import { get, getDatabase, orderByKey, query, ref } from 'firebase/database';\nimport { useEffect, useState } from \"react\";\n\nexport default function useAnswers(videoID){\n  const [loader, setLoader] = useState(true);\n  const [error, setError] = useState(false);\n  const [answers, setAnswers] = useState([]);\n\n  useEffect(() => {\n    async function fetchAnswers(){\n      const db = getDatabase();\n      const answerRef = ref(db, 'answers/' + videoID + 'questions');\n      const answerQuery = query(answerRef, orderByKey());\n\n      try {\n        setError(false);\n        setLoader(true);\n\n        // request firebase database\n        const snapshot = await get(answerQuery);\n\n        setLoader(false);\n\n        // check if snapshot has data. return true / false\n        if(snapshot.exists()){\n          // get previous state data first\n          setAnswers((prevAnswers) => {\n            // return an array of previous destructured value, plus values from snapshot object\n            return [...prevAnswers, Object.values(snapshot.val())];\n          });\n        }\n      } catch (err) {\n        console.log(err);\n\n        setLoader(false);\n        setError(true);\n      }\n    }\n\n    fetchAnswers();\n  }, [videoID]);\n\n  return {\n    loader,\n    error,\n    answers,\n  }\n}"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,WAAd,EAA2BC,UAA3B,EAAuCC,KAAvC,EAA8CC,GAA9C,QAAyD,mBAAzD;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,eAAe,SAASC,UAAT,CAAoBC,OAApB,EAA4B;EAAA;;EACzC,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,IAAD,CAApC;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,KAAD,CAAlC;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;EAEAD,SAAS,CAAC,MAAM;IACd,eAAeU,YAAf,GAA6B;MAC3B,MAAMC,EAAE,GAAGf,WAAW,EAAtB;MACA,MAAMgB,SAAS,GAAGb,GAAG,CAACY,EAAD,EAAK,aAAaR,OAAb,GAAuB,WAA5B,CAArB;MACA,MAAMU,WAAW,GAAGf,KAAK,CAACc,SAAD,EAAYf,UAAU,EAAtB,CAAzB;;MAEA,IAAI;QACFU,QAAQ,CAAC,KAAD,CAAR;QACAF,SAAS,CAAC,IAAD,CAAT,CAFE,CAIF;;QACA,MAAMS,QAAQ,GAAG,MAAMnB,GAAG,CAACkB,WAAD,CAA1B;QAEAR,SAAS,CAAC,KAAD,CAAT,CAPE,CASF;;QACA,IAAGS,QAAQ,CAACC,MAAT,EAAH,EAAqB;UACnB;UACAN,UAAU,CAAEO,WAAD,IAAiB;YAC1B;YACA,OAAO,CAAC,GAAGA,WAAJ,EAAiBC,MAAM,CAACC,MAAP,CAAcJ,QAAQ,CAACK,GAAT,EAAd,CAAjB,CAAP;UACD,CAHS,CAAV;QAID;MACF,CAjBD,CAiBE,OAAOC,GAAP,EAAY;QACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ;QAEAf,SAAS,CAAC,KAAD,CAAT;QACAE,QAAQ,CAAC,IAAD,CAAR;MACD;IACF;;IAEDG,YAAY;EACb,CAhCQ,EAgCN,CAACP,OAAD,CAhCM,CAAT;EAkCA,OAAO;IACLC,MADK;IAELE,KAFK;IAGLE;EAHK,CAAP;AAKD;;GA5CuBN,U"},"metadata":{},"sourceType":"module"}